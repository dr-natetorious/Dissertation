type Query {
  get_annotation(video_id: ID): Annotation
  get_video(video_id: ID): Video
}

type Offset {
  start_sec: Int
  end_sec: Int
}

type BoundingBox {
  left: Float
  top: Float
  width: Float
  height: Float
}

type LabelDetection {
  parents: [LabelName]
  aliases: [LabelName]
  categories: [LabelName]
  name: String!
  confidence: Float
  instances: [LabelInstance]
}

type LabelInstance{
  confidence: Float
  boundingBox: BoundingBox
}
type LabelName {
  name: String
}

type Annotation {
  label: String
  segment: Offset
}

type Video {
  id: ID
  annotation: Annotation
  people: [Person]
  analysis :VideoFrameAnalysis
  youtube_opts: YouTubeOptions
  cached: [VideoCache]
}

type VideoFrameAnalysis{
  manifest: VideoFrameAnalysisManifest
  frames: [KeyFrameInfo]
}

type KeyFrameInfo{
  offset: Float
  frame_location: KeyFrameInfoLocation
  labels: [LabelDetection]
}

type VideoFrameAnalysisManifest{
  location: String
}

type KeyFrameInfoLocation{
  sourceUri: String
  skeletonUri: String
}

type VideoCache{
  location: String
  quality: String
}

type VideoDetails {
  title: String
  lengthSeconds: String
  channelId: String
  shortDescription: String
  viewCount: String
}

type VideoDownloadFormat {
  itag: Int
  mimeType: String
  bitrate: Int
  width: Int
  height: Int
  lastModified: String
  quality: String
  fps: Int
  qualityLabel: String
}

type YouTubeOptions {
  id: ID
  payload: String
  details: VideoDetails
  formats: [VideoDownloadFormat]
}

type Person {
  id: ID
  segment: Offset!
  labels: [LabelDetection]
}